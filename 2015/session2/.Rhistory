setwd("~/Escritorio/ESAC-Astrostats/2015/session2")
rm(list=ls()) # Remove any previous variable
require("mvtnorm") # Load library for multivariate normals
load("dataset.RData") # Load the dataset
n <- length(x) # How many points?
sigma <- 0.1 # Define measurement uncertainties
plot(x,y,pch=15,col="blue")
y.noise <- y
# Define the log of the Likelihood
loglik <- function(x.obs,y.obs,m,c,Sigma)
{
predicted <- x.obs*m+c
loglik <- dmvnorm(y.obs,predicted,Sigma,log=T) # Note the argument log=T
return(loglik)
}
Sigma <- diag(rep(sigma,length(x))) # In this case, we assume iid, but the general case is a full covariance matrix
# What would be the log-likelihood for the true parameters?
m <- 1
c <- 1
loglik(x,y,m,c,Sigma)
# And for any other set of parameters?
# Let us define a grid of values
m.grid <- seq(0,2,length.out = 100)
c.grid <- seq(0,2,length.out = 100)
loglik.grid <- matrix(NA,length(m.grid),length(c.grid))
# ... compute the log-likelihood on the grid
for (i in 1:length(m.grid))
{
for (j in 1:length(c.grid))
{
loglik.grid[i,j] <- loglik(x,y.noise,m.grid[i],c.grid[j],Sigma)
}
}
# And plot it
par(mar=c(5,5,1,8))
image(m.grid,c.grid,exp(loglik.grid)) # Plot the likelihood, not the log-lik. Note the exp function!
require(fields)
image.plot(add=T,legend.only=TRUE, zlim= range(exp(loglik.grid)),col=heat.colors(12),legend.width = 3)
# Where is the maximum?
# There is one R package that will search the parameter space for the maximum
require(stats4)
# But we need to define *minus!* the log-likelihood
# and only in terms of the parameters:
loglik2 <- function(m,c)
{
predicted <- x*m+c
loglik <- -dmvnorm(y.noise,predicted,Sigma,log=T)
return(loglik)
}
# Once we have this, we can use the mle function to search for the maximum
mle <- mle(loglik2,start=list(m=1,c=1))
# And print the results
print(mle)
coef(mle)
logLik(mle)
mle <- mle(loglik2,list(m=1,c=1))
loglik3 <- function(m1,m2,m3,m4,m5,m6,m7,m8,m9,m10,
m11,m12,m13,m14,m15,m16,m17,m18,m19,m20,
m21,m22,m23,m24,c)
{
m <- c(m1,m2,m3,m4,m5,m6,m7,m8,m9,m10,m11,m12,m13,m14,m15,m16,m17,m18,m19,m20,m21,m22,m23,m24)
predicted <- c
for (i in 1:length(m))
{
predicted <- predicted + x^i*m[i]
}
loglik <- -dmvnorm(y.noise,predicted,Sigma,log=T)
return(loglik)
}
mle <- mle(loglik3,list(m1=0, m2=0, m3=0, m4=0,m5=0,m6=0,m7=0,m8=0,m9=0,m10=0,
m11=0, m12=0, m13=0, m14=0,m15=0,m16=0,m17=0,m18=0,m19=0,m20=0,
m21=0, m22=0, m23=0, m24=0,c=0.))
print(mle)
coef(mle)
logLik(mle)
